name: Flame
repository: https://github.com/flame-engine/flame

packages:
  - packages/**
  - examples/
  - examples/games/**
  - doc/**

command:
  version:
    # Only allow versioning to happen on main branch.
    branch: main
    # Generates a link to a prefilled GitHub release creation page.
    releaseUrl: true

  bootstrap:
    environment:
      sdk: ">=3.4.0 <4.0.0"
      flutter: ">=3.22.0"
    dependencies:
      meta: ^1.12.0
      vector_math: ^2.1.4
    dev_dependencies:
      dartdoc: ^8.0.8
      mocktail: ^1.0.3
      test: any

  publish:
    hooks:
      pre: melos devtools-build

scripts:
  lint:all:
    steps:
      - analyze
      - format
    description: Run all static analysis checks.

  format-check:
    run: melos exec dart format . --set-exit-if-changed
    description: Run `dart format` checks for all packages.

  markdown-check:
    run: markdownlint . --ignore-path .markdownlintignore --config .markdownlint.yaml
    description: Runs the markdown linting check.

  markdown-fix:
    run: markdownlint . --fix --ignore-path .markdownlintignore --config .markdownlint.yaml
    description: Fixes the markdown linting errors.

  dartdoc:
    run: melos exec flutter pub run dartdoc
    description: Run dartdoc checks for all packages.

  doc-setup:
    steps:
      - "echo Checking python version:"
      - 'python3 --version && (python3 -c "import sys; sys.exit(0 if sys.version_info >= (3,8) else 2)" || (echo  Error: Python 3.8+ is required && exit 1))'
      - "echo Installing required python modules:"
      - 'python3 -m pip install -r "$MELOS_ROOT_PATH/doc/_sphinx/requirements.txt"'
      - "echo Installing dartdoc_json:"
      - "dart pub global activate dartdoc_json"
      - "echo Done."
    description: Prepares the environment for documentation development.

  doc-build:
    run: cd "$MELOS_ROOT_PATH/doc/_sphinx" && make html
    description: Create the sphinx html docs.

  doc-serve:
    run: cd "$MELOS_ROOT_PATH/doc/_sphinx" && make livehtml
    description: Recompiles the docs every time there is a change in them and opens your browser.

  doc-kill:
    run: cd "$MELOS_ROOT_PATH/doc/_sphinx" && python3 kill-server.py
    description: Kills any TCP processes running on port 8000.

  doc-clean:
    run: cd "$MELOS_ROOT_PATH/doc/_sphinx" && make clean
    description: Removes all Sphinx's cached generated files.

  doc-linkcheck:
    run: cd "$MELOS_ROOT_PATH/doc/_sphinx" && make linkcheck
    description: Checks whether there are any broken links in the docs.

  test:select:
    run: melos exec -c 1 -- flutter test
    packageFilters:
      dirExists: test
    description: Run `flutter test` for selected packages.

  test:
    run: melos run test:select --no-select
    description: Run all Flutter tests in this project.

  coverage:
    steps: 
      - melos exec -- flutter test --coverage
      - melos exec -- genhtml coverage/lcov.info --output-directory=coverage/
    packageFilters:
      dirExists: test
    description: Generate coverage for the selected package.

  upgrade: melos exec flutter pub upgrade

  update-goldens:
    run: melos exec -- flutter test --update-goldens
    packageFilters:
      dirExists: test
    description: Re-generate all golden test files

  devtools-build:
    run: melos exec -- dart run devtools_extensions build_and_copy --source=. --dest=../flame/extension/devtools
    packageFilters:
      scope: flame_devtools
    description: Builds the devtools and copies the build directory to the Flame package.

  devtools-simulator:
    run: melos exec -- flutter run -d chrome --dart-define=use_simulated_environment=true
    packageFilters:
      scope: flame_devtools
    description: Runs the devtools in the simulated mode.
