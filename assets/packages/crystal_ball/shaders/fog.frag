{
  "sksl": {
    "entrypoint": "fog_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 uSize;\nuniform float uGroundPos;\nuniform float uGroundAdd;\nuniform float uFade;\nuniform float uTime;\n\nvec4 fragColor;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nfloat FLT_flutter_local_hash(inout vec2 p)\n{\n    p = fract((p * 0.31830990314483642578125) + vec2(0.709999978542327880859375, 0.112999998033046722412109375)) * 50.0;\n    return (-1.0) + (2.0 * fract((p.x * p.y) * (p.x + p.y)));\n}\n\nfloat FLT_flutter_local_noise(vec2 p)\n{\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    vec2 u = ((f * f) * f) * ((f * ((f * 6.0) - vec2(15.0))) + vec2(10.0));\n    vec2 param = i + vec2(0.0);\n    float _100 = FLT_flutter_local_hash(param);\n    vec2 param_1 = i + vec2(1.0, 0.0);\n    float _106 = FLT_flutter_local_hash(param_1);\n    vec2 param_2 = i + vec2(0.0, 1.0);\n    float _114 = FLT_flutter_local_hash(param_2);\n    vec2 param_3 = i + vec2(1.0);\n    float _119 = FLT_flutter_local_hash(param_3);\n    return mix(mix(_100, _106, u.x), mix(_114, _119, u.x), u.y);\n}\n\nfloat FLT_flutter_local_fractalNoise(inout vec2 uv)\n{\n    float f = 0.0;\n    uv *= 8.0;\n    mat2 m = mat2(vec2(1.60000002384185791015625, 1.2000000476837158203125), vec2(-1.2000000476837158203125, 1.60000002384185791015625));\n    vec2 param = uv;\n    f = 0.5 * FLT_flutter_local_noise(param);\n    uv = m * uv;\n    vec2 param_1 = uv;\n    f += (0.25 * FLT_flutter_local_noise(param_1));\n    uv = m * uv;\n    vec2 param_2 = uv;\n    f += (0.125 * FLT_flutter_local_noise(param_2));\n    uv = m * uv;\n    vec2 param_3 = uv;\n    f += (0.0625 * FLT_flutter_local_noise(param_3));\n    uv = m * uv;\n    f = 0.5 + (0.5 * f);\n    return f;\n}\n\nvoid FLT_flutter_local_fragment(vec2 cuv, vec2 pos, out vec4 color, float timeMultiplier)\n{\n    vec2 p = pos / uSize;\n    vec2 uv = p * vec2(uSize.x / uSize.y, 1.0);\n    float waterline = uGroundPos;\n    float fade = uFade;\n    float tr = step(waterline - fade, uv.y);\n    tr *= smoothstep(waterline - fade, waterline, uv.y);\n    uv.y -= uGroundAdd;\n    uv *= 1.0;\n    uv.x += (uTime * timeMultiplier);\n    vec2 param = uv;\n    float _242 = FLT_flutter_local_fractalNoise(param);\n    float f = _242;\n    f *= tr;\n    f *= 0.64999997615814208984375;\n    f = pow(f, 1.7999999523162841796875);\n    color = vec4(vec3(0.800000011920928955078125, 0.4000000059604644775390625, 1.0) * f, f);\n}\n\nvoid FLT_main()\n{\n    vec2 pos_1 = FLT_flutter_local_FlutterFragCoord();\n    vec2 uv_1 = pos_1 / uSize;\n    vec2 param_1 = uv_1;\n    vec2 param_2 = pos_1;\n    vec4 color_1;\n    vec4 param_3 = color_1;\n    float param_4 = 0.014999999664723873138427734375;\n    FLT_flutter_local_fragment(param_1, param_2, param_3, param_4);\n    color_1 = param_3;\n    vec2 param_5 = uv_1;\n    vec2 param_6 = pos_1;\n    vec4 color2;\n    vec4 param_7 = color2;\n    float param_8 = -0.07999999821186065673828125;\n    FLT_flutter_local_fragment(param_5, param_6, param_7, param_8);\n    color2 = param_7;\n    fragColor = color_1 + color2;\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "uSize",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 1,
        "name": "uGroundPos",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 2,
        "name": "uGroundAdd",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 3,
        "name": "uFade",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 4,
        "name": "uTime",
        "rows": 1,
        "type": 10
      }
    ]
  }
}